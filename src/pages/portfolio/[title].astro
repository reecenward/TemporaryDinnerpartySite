---
export const prerender = true;
import MarkdownContent from "../../components/username/content2";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const response = await fetch(
    `https://strapi-production-71a1.up.railway.app/api/dp-portfolios`
  );
  const posts = await response.json();
  const paths = posts.data.map(
    (post: { id: number; attributes: { Title: string } }) => {
      return { params: { title: post.attributes.Title } };
    }
  );
  console.log(paths)
  return paths;

}

const { title } = Astro.params;
console.log(title)
const response = await fetch(
  `https://strapi-production-71a1.up.railway.app/api/dp-portfolios/?filters[Title][$eq]=${title}&populate=Thumbnail&populate=Videos`
);
const postData = await response.json();
const post = postData.data[0];
console.log(post.attributes.Videos.data[0].attributes.url)

const formatDate = (dateString: string) => {
  const options: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "long",
    day: "numeric",
    timeZone: "UTC",
  };
  const date = new Date(dateString);
  return date.toLocaleDateString("en-US", options);
};

---

<div class="blog-title-wrapper">
  <p class="blog-date">
    <time>Posted on {formatDate(post.attributes.publishedAt)}</time>
  </p>
  <p class="blog-date">
    Updated on <time>{formatDate(post.attributes.updatedAt)}</time>
  </p>
</div>
        <h1 class="blog-title" >{post.attributes.Title}</h1>
        {post.attributes.Link && post.attributes.Link.trim() !== "" && ( // Check if Link attribute is not an empty string
        <a class="link" href={post.attributes.Link} target="_blank">{post.attributes.Linkname}</a>
    )}
      
{post.attributes.Videos.data.map((video: { attributes: { url: string } }, index: number) => (
    <div key={index} class="video-container">
        <video controls src={video.attributes.url} />
    </div>
    
))}


        <MarkdownContent content={post.attributes.Content} />



        <style>

        </style>